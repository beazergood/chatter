{
    "pipes": [],
    "interfaces": [
        {
            "name": "Message",
            "id": "interface-Message-7e1723a7ef2903472e08dffa3f71fb35df4d2305dc3877eaf3cef5dcbcc95ccf779a23e065c89f8e30cb600f6e7fa871450c8e808e7b4cf0bd97e7f93babeb59",
            "file": "src/app/data.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket'\nimport { environment } from '../environments/environment'\nimport { tap } from 'rxjs/operators'\nimport { BehaviorSubject, Subject } from 'rxjs'\nexport const WS_ENDPOINT = environment.wsEndpoint\n\nexport interface Message {\n  name: string\n  message: string\n  time: Date\n  isBroadcast: boolean\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  private socket$: WebSocketSubject<any> = webSocket(WS_ENDPOINT) // works\n  private _messages: BehaviorSubject<any> = new BehaviorSubject([])\n  public messages$ = this._messages.asObservable()\n  public serverMessages = new Array<Message>()\n\n  constructor() {\n    this.socket$\n      .pipe(\n        tap({\n          next: (data) => console.log('[Live observable] Next: ', data),\n          error: (error) => console.log('[Live observable] Error:', error),\n          complete: () => console.log('[Live observable] Connection Closed'),\n        })\n        // catchError((_) => EMPTY)\n      )\n      .subscribe(\n        (message) => {\n          console.log(\n            'message from server being pushed to client array: ',\n            JSON.parse(JSON.stringify(message))\n          )\n          // why is message an Array Buffer?!\n          this.serverMessages.push(JSON.parse(JSON.stringify(message)))\n        },\n        (err) => console.error(err),\n        () => console.warn('Completed!')\n      )\n  }\n\n  sendMessage(msgStr: any) {\n    console.log('sending message: ', msgStr)\n    const msg = {\n      message: msgStr,\n      name: 'Dave B',\n      isBroadcast: false,\n      time: new Date(),\n    }\n    // this.serverMessages.push(msg)\n    this.socket$.next(msg)\n    console.log('serverMessages: ', this.serverMessages)\n  }\n\n  close() {\n    this.socket$.complete()\n  }\n}\n",
            "properties": [
                {
                    "name": "isBroadcast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Message",
            "id": "interface-Message-a2a8f7f75d42a2ce1dac72da544b895e5e87a5f77abe88b6bd6757b3ac1256c113f9c364948bb26cedd801d2b1b43950f50a24165c5ca5aee4169fc736b93954-1",
            "file": "src/app/components/chat/chat.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core'\n\nexport interface Message {\n  name: string\n  time: Date\n  message: string\n  isBroadcast?: boolean\n}\n/***\n * @description shows a feed of chat messages\n */\n@Component({\n  selector: 'app-chat',\n  template: `\n    <div class=\"flex flex-col\">\n      <ng-template #noChat>No chat</ng-template>\n      <ng-container *ngIf=\"messages?.length; else noChat\">\n        <div *ngFor=\"let msg of messages\" class=\"py-2 border-b border-gray-100\">\n          <p>\n            <span class=\"font-semibold mr-2\">{{ msg.name }}</span>\n            <span class=\"text-gray-400\">{{ msg.time | date: 'HH:mm' }}</span>\n          </p>\n          <p>message: {{ msg.message }}</p>\n          <p>isBroadcast: {{ msg.isBroadcast }}</p>\n        </div>\n      </ng-container>\n      <app-message-form\n        (sendMessage)=\"onSendMessage.emit($event)\"\n      ></app-message-form>\n    </div>\n  `,\n})\nexport default class ChatComponent {\n  @Input() messages?: Message[]\n  @Output() onSendMessage: EventEmitter<any> = new EventEmitter()\n}\n",
            "properties": [
                {
                    "name": "isBroadcast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Message-1"
        },
        {
            "name": "Participant",
            "id": "interface-Participant-6f9ab5a1a8c14c59a34a80a95ad846baa7ecf42f294851ee98eeebec79f18aacc9eb95655a733532296d96ff132009ece12dc05a3926917e06dba66e830a4f99",
            "file": "src/app/components/participants/participants.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core'\nexport const participantsData = [\n  {\n    firstname: 'Elon',\n    lastname: 'Musk',\n  },\n  {\n    firstname: 'Jeff',\n    lastname: 'Bezos',\n  },\n  {\n    firstname: 'JB',\n    lastname: 'Straubel',\n  },\n  {\n    firstname: 'Reid',\n    lastname: 'Hoffman',\n  },\n]\n\nexport interface Participant {\n  firstname: string\n  lastname: string\n}\n\n@Component({\n  selector: 'app-participants',\n  template: `\n    <div class=\"p-2\">\n      <ng-container *ngIf=\"participants\">\n        <ul class=\"w-100\">\n          <li\n            *ngFor=\"let participant of participants\"\n            class=\"p-4 border-b border-gray-200\"\n          >\n            {{ participant.firstname }} {{ participant.lastname }}\n          </li>\n        </ul>\n      </ng-container>\n    </div>\n  `,\n})\nexport default class ParticipantsComponent {\n  @Input() participants?: Participant[]\n}\n",
            "properties": [
                {
                    "name": "firstname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "lastname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ChatService",
            "id": "injectable-ChatService-2fec69e43c901a7be3dc83e904f21cfd1f0f3ab9c4b2611a8babed13110cc71aaad8b3f14f928eb97a102fb77805bad624c50899af89829511270334887b4dba",
            "file": "src/app/chat.service.ts",
            "properties": [
                {
                    "name": "subject$",
                    "defaultValue": "webSocket(WS_ENDPOINT)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "connectToApi",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { HttpHeaders } from '@angular/common/http'\nimport { webSocket } from 'rxjs/webSocket'\nimport { environment } from '../environments/environment'\nimport { Observable } from 'rxjs'\n\nexport const WS_ENDPOINT = environment.wsEndpoint\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChatService {\n  // private socket$: WebSocketsubject$<any>\n\n  private subject$: any = webSocket(WS_ENDPOINT)\n\n  constructor(private http: HttpClient) {\n    // this.subject$.subscribe(\n    //   (msg) => console.log('message received: ' + msg), // Called whenever there is a message from the server.\n    //   (err) => console.log(err), // Called if at any point WebSocket API signals some kind of error.\n    //   () => console.log('complete') // Called when connection is closed (for whatever reason).\n    // )\n  }\n\n  public connectToApi(): Observable<any> {\n    alert('connectToApi')\n    let headers = new HttpHeaders()\n    headers.set('Access-Control-Allow-Origin', '*')\n    headers.set('connection', 'Upgrade')\n\n    console.log('callings connectToApi')\n    return this.http.post('http://localhost:5001/websockets', '', {\n      headers: headers,\n    })\n  }\n  // private messagessubject$$ = new subject$()\n  // public messages$ = this.messagessubject$$.pipe(switchAll(), catchError(e => { throw e }));\n\n  // public connect(): void {\n  //   if (!this.socket$ || this.socket$.closed) {\n  //     this.socket$ = this.getNewWebSocket()\n  //     const messages = this.socket$.pipe(\n  //       tap({\n  //         error: (error) => console.log(error),\n  //       }),\n  //       catchError((_) => EMPTY)\n  //     )\n  //     this.messagessubject$$.next(messages)\n  //   }\n\n  // private subject$: webSocket(WS_ENDPOINT)\n\n  // subject$.subscribe()\n  // Note that at least one consumer has to subscribe to the created subject$ - otherwise \"nexted\" values will be just buffered and not sent,\n  // since no connection was established!\n\n  // subject$.next({ message: 'some message' })\n  // This will send a message to the server once a connection is made. Remember value is serialized with JSON.stringify by default!\n\n  // subject$.complete() // Closes the connection.\n\n  // subject$.error({ code: 4000, reason: 'I think our app just broke!' })\n  // Also closes the connection, but let's the server know that this closing is caused by some error.\n  // }\n\n  // private getNewWebSocket() {\n  //   return webSocket(WS_ENDPOINT)\n  // }\n  // sendMessage(msg: any) {\n  //   this.socket$.next(msg)\n  // }\n  // close() {\n  //   this.socket$.complete()\n  // }\n\n  // public onSendMessage(ev: any) {\n  //   console.log('chat service send this message ', ev)\n  //   return\n  // }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DataService",
            "id": "injectable-DataService-7e1723a7ef2903472e08dffa3f71fb35df4d2305dc3877eaf3cef5dcbcc95ccf779a23e065c89f8e30cb600f6e7fa871450c8e808e7b4cf0bd97e7f93babeb59",
            "file": "src/app/data.service.ts",
            "properties": [
                {
                    "name": "_messages",
                    "defaultValue": "new BehaviorSubject([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "messages$",
                    "defaultValue": "this._messages.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "serverMessages",
                    "defaultValue": "new Array<Message>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "socket$",
                    "defaultValue": "webSocket(WS_ENDPOINT)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WebSocketSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendMessage",
                    "args": [
                        {
                            "name": "msgStr",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "msgStr",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket'\nimport { environment } from '../environments/environment'\nimport { tap } from 'rxjs/operators'\nimport { BehaviorSubject, Subject } from 'rxjs'\nexport const WS_ENDPOINT = environment.wsEndpoint\n\nexport interface Message {\n  name: string\n  message: string\n  time: Date\n  isBroadcast: boolean\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  private socket$: WebSocketSubject<any> = webSocket(WS_ENDPOINT) // works\n  private _messages: BehaviorSubject<any> = new BehaviorSubject([])\n  public messages$ = this._messages.asObservable()\n  public serverMessages = new Array<Message>()\n\n  constructor() {\n    this.socket$\n      .pipe(\n        tap({\n          next: (data) => console.log('[Live observable] Next: ', data),\n          error: (error) => console.log('[Live observable] Error:', error),\n          complete: () => console.log('[Live observable] Connection Closed'),\n        })\n        // catchError((_) => EMPTY)\n      )\n      .subscribe(\n        (message) => {\n          console.log(\n            'message from server being pushed to client array: ',\n            JSON.parse(JSON.stringify(message))\n          )\n          // why is message an Array Buffer?!\n          this.serverMessages.push(JSON.parse(JSON.stringify(message)))\n        },\n        (err) => console.error(err),\n        () => console.warn('Completed!')\n      )\n  }\n\n  sendMessage(msgStr: any) {\n    console.log('sending message: ', msgStr)\n    const msg = {\n      message: msgStr,\n      name: 'Dave B',\n      isBroadcast: false,\n      time: new Date(),\n    }\n    // this.serverMessages.push(msg)\n    this.socket$.next(msg)\n    console.log('serverMessages: ', this.serverMessages)\n  }\n\n  close() {\n    this.socket$.complete()\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-ded4ee8379e39c74ac30c9ab10dd1ad569bbdd3766cde8654f723149beffba31fc8dff10bb76c2c04efdb75301da14b6d222b5b0d2a420f6de74c216855c20a1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<app-page-shell></app-page-shell>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'le-chat'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  template: ` <app-page-shell></app-page-shell> `,\n})\nexport default class AppComponent {\n  title = 'le-chat'\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ChatComponent",
            "id": "component-ChatComponent-a2a8f7f75d42a2ce1dac72da544b895e5e87a5f77abe88b6bd6757b3ac1256c113f9c364948bb26cedd801d2b1b43950f50a24165c5ca5aee4169fc736b93954",
            "file": "src/app/components/chat/chat.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chat",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-col\">\n  <ng-template #noChat>No chat</ng-template>\n  <ng-container *ngIf=\"messages?.length; else noChat\">\n    <div *ngFor=\"let msg of messages\" class=\"py-2 border-b border-gray-100\">\n      <p>\n        <span class=\"font-semibold mr-2\">{{ msg.name }}</span>\n        <span class=\"text-gray-400\">{{ msg.time | date: 'HH:mm' }}</span>\n      </p>\n      <p>message: {{ msg.message }}</p>\n      <p>isBroadcast: {{ msg.isBroadcast }}</p>\n    </div>\n  </ng-container>\n  <app-message-form\n    (sendMessage)=\"onSendMessage.emit($event)\"\n  ></app-message-form>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "messages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Message[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSendMessage",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core'\n\nexport interface Message {\n  name: string\n  time: Date\n  message: string\n  isBroadcast?: boolean\n}\n/***\n * @description shows a feed of chat messages\n */\n@Component({\n  selector: 'app-chat',\n  template: `\n    <div class=\"flex flex-col\">\n      <ng-template #noChat>No chat</ng-template>\n      <ng-container *ngIf=\"messages?.length; else noChat\">\n        <div *ngFor=\"let msg of messages\" class=\"py-2 border-b border-gray-100\">\n          <p>\n            <span class=\"font-semibold mr-2\">{{ msg.name }}</span>\n            <span class=\"text-gray-400\">{{ msg.time | date: 'HH:mm' }}</span>\n          </p>\n          <p>message: {{ msg.message }}</p>\n          <p>isBroadcast: {{ msg.isBroadcast }}</p>\n        </div>\n      </ng-container>\n      <app-message-form\n        (sendMessage)=\"onSendMessage.emit($event)\"\n      ></app-message-form>\n    </div>\n  `,\n})\nexport default class ChatComponent {\n  @Input() messages?: Message[]\n  @Output() onSendMessage: EventEmitter<any> = new EventEmitter()\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-0cd94fbc94a83702e45bf987cb3b3f9074d69cd27e6ca2e4fbac0dc5b5047bd4dc3a9ce8a77f6bd9ab7ae3e6ca8e49b34bed529ca0da0fa428fec544a0324870",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "MessageFormComponent",
            "id": "component-MessageFormComponent-c35793696b05b9d3891a5807c6bb5b18c0b84ad7a208dc3af4667cb77d4675ef8bbfa4c4b1bf050577c78e24c8ec4c32d12739dda4cd9f7254fa688c8f4f65fa",
            "file": "src/app/components/message-form/message-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-message-form",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"bg-gray-200 shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n  <form>\n    <div class=\"mb-4\">\n      <input\n        class=\"shadow appearance-none rounded w-full py-2 px-3 border\n         text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n        id=\"message\"\n        type=\"text\"\n        placeholder=\"Message\"\n        (keyup)=\"onKey($event)\"\n      />\n    </div>\n  </form>\n  <button\n    class=\"p-2 rounded-md shadow-md w-64 bg-blue-300\"\n    (click)=\"sendMessage.emit({message})\"\n  >\n    Send\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "sendMessage",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "onKey",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core'\n\n@Component({\n  selector: 'app-message-form',\n  template: `\n    <div class=\"bg-gray-200 shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n      <form>\n        <div class=\"mb-4\">\n          <input\n            class=\"shadow appearance-none rounded w-full py-2 px-3 border\n             text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"message\"\n            type=\"text\"\n            placeholder=\"Message\"\n            (keyup)=\"onKey($event)\"\n          />\n        </div>\n      </form>\n      <button\n        class=\"p-2 rounded-md shadow-md w-64 bg-blue-300\"\n        (click)=\"sendMessage.emit({message})\"\n      >\n        Send\n      </button>\n    </div>\n  `,\n})\nexport default class MessageFormComponent {\n  @Output() sendMessage: EventEmitter<any> = new EventEmitter()\n  message: string = ''\n  onKey(event: any) {\n    this.message = event.target.value\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-432c9ae0bcf6e2e1f46701f7565a67376cb10145b7d049c5fe930cf8f075c6e02e24151589750b18cbaa8266f7c61393b95c4d833fbfd71ee228904aa014349f",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageShellComponent",
            "id": "component-PageShellComponent-934ec5446def90cef9e6769e4fa231d3a2928af9dec6e511d1c322f418a01b6f705b3cf99e70f265d0881364397d22b9676f5f372b0552980db93616ce21acb2",
            "file": "src/app/components/shells/page-shell/page-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-shell",
            "styleUrls": [],
            "styles": [],
            "template": "<app-pure-page-shell\n  [messages]=\"serverMessages\"\n  [participants]=\"participants\"\n  (onSendMessage)=\"buttonClicked($event)\"\n>\n</app-pure-page-shell>\n<pre>\n{{ messages$ | async | json }}\n</pre\n>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "liveData$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "messages$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "participants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Participant[]",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "serverMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "buttonClicked",
                    "args": [
                        {
                            "name": "ev",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\nimport { Observable, tap } from 'rxjs'\nimport { DataService } from 'src/app/data.service'\nimport { Message } from '../../chat/chat.component'\nimport { Participant } from '../../participants/participants.component'\n\n@Component({\n  selector: 'app-page-shell',\n  template: `\n    <app-pure-page-shell\n      [messages]=\"serverMessages\"\n      [participants]=\"participants\"\n      (onSendMessage)=\"buttonClicked($event)\"\n    >\n    </app-pure-page-shell>\n    <pre>\n    {{ messages$ | async | json }}\n    </pre\n    >\n  `,\n})\nexport default class PageShellComponent implements OnInit {\n  participants?: Participant[]\n  messages$?: Observable<any>\n  serverMessages: any\n  liveData$: any\n\n  constructor(private dataSvc: DataService) {\n    this.messages$ = this.dataSvc.messages$.pipe(\n      tap({\n        next: (data) => console.log('[Live component] Next: ', data),\n        error: (error) => console.log('[Live component] Error:', error),\n        complete: () => console.log('[Live component] Connection Closed'),\n      })\n    )\n    this.serverMessages = this.dataSvc.serverMessages\n  }\n\n  ngOnInit() {}\n\n  buttonClicked(ev: any) {\n    console.log('pinging api with a message for websocket server', ev)\n    this.dataSvc.sendMessage(ev.message)\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataSvc",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "dataSvc",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ParticipantsComponent",
            "id": "component-ParticipantsComponent-6f9ab5a1a8c14c59a34a80a95ad846baa7ecf42f294851ee98eeebec79f18aacc9eb95655a733532296d96ff132009ece12dc05a3926917e06dba66e830a4f99",
            "file": "src/app/components/participants/participants.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-participants",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"p-2\">\n  <ng-container *ngIf=\"participants\">\n    <ul class=\"w-100\">\n      <li\n        *ngFor=\"let participant of participants\"\n        class=\"p-4 border-b border-gray-200\"\n      >\n        {{ participant.firstname }} {{ participant.lastname }}\n      </li>\n    </ul>\n  </ng-container>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "participants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "Participant[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'\nexport const participantsData = [\n  {\n    firstname: 'Elon',\n    lastname: 'Musk',\n  },\n  {\n    firstname: 'Jeff',\n    lastname: 'Bezos',\n  },\n  {\n    firstname: 'JB',\n    lastname: 'Straubel',\n  },\n  {\n    firstname: 'Reid',\n    lastname: 'Hoffman',\n  },\n]\n\nexport interface Participant {\n  firstname: string\n  lastname: string\n}\n\n@Component({\n  selector: 'app-participants',\n  template: `\n    <div class=\"p-2\">\n      <ng-container *ngIf=\"participants\">\n        <ul class=\"w-100\">\n          <li\n            *ngFor=\"let participant of participants\"\n            class=\"p-4 border-b border-gray-200\"\n          >\n            {{ participant.firstname }} {{ participant.lastname }}\n          </li>\n        </ul>\n      </ng-container>\n    </div>\n  `,\n})\nexport default class ParticipantsComponent {\n  @Input() participants?: Participant[]\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "PurePageShellComponent",
            "id": "component-PurePageShellComponent-30639804e1fa2d5a28e19b6449e0ca8e8728ea0d18da6bc6a7914fe1f7ba2add539b936cb139ca36a4efc79e25c31dbaaedb2cd709dadb015f3fe9607156b950",
            "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pure-page-shell",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-full\">\n  <h1 class=\"text-center bg-gray-200 py-6\">{{ title }}</h1>\n\n  <ul class=\"flex mb-0 list-none flex-wrap pb-4 flex-row\">\n    <li class=\" last:mr-0 flex-auto text-center\">\n      <a\n        class=\"text-xs font-bold uppercase px-5 py-3 block leading-normal\"\n        (click)=\"toggleTabs(1)\"\n        [ngClass]=\"{\n          'bg-gray-200': openTab !== 1,\n          'bg-white': openTab === 1\n        }\"\n      >\n        <i class=\"fas fa-space-shuttle text-base mr-1\"></i>\n        Chat\n      </a>\n    </li>\n    <li class=\"mr-2 last:mr-0 flex-auto text-center\">\n      <a\n        class=\"text-xs font-bold uppercase px-5 py-3 block leading-normal\"\n        (click)=\"toggleTabs(2)\"\n        [ngClass]=\"{\n          'bg-gray-200': openTab !== 2,\n          'bg-white': openTab === 2\n        }\"\n      >\n        <i class=\"fas fa-cog text-base mr-1\"></i>\n        Participants (\n        {{ participants?.length }})\n      </a>\n    </li>\n  </ul>\n  <div\n    class=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 \"\n  >\n    <div class=\"px-4 py-5 flex-auto\">\n      <div class=\"tab-content tab-space\">\n        <div [ngClass]=\"{ hidden: openTab !== 1, block: openTab === 1 }\">\n          <app-chat\n            [messages]=\"messages\"\n            (onSendMessage)=\"onSendMessage.emit($event)\"\n          >\n          </app-chat>\n        </div>\n        <div [ngClass]=\"{ hidden: openTab !== 2, block: openTab === 2 }\">\n          <app-participants\n            [participants]=\"participants\"\n          ></app-participants>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "messages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "participants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "Participant[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSendMessage",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "openTab",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "title",
                    "defaultValue": "'Status Meeting Standup'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 72
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleTabs",
                    "args": [
                        {
                            "name": "$tabNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$tabNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core'\nimport { Message } from '../../../chat/chat.component'\nimport { Participant } from '../../../participants/participants.component'\n\n@Component({\n  selector: 'app-pure-page-shell',\n  template: `\n    <div class=\"w-full\">\n      <h1 class=\"text-center bg-gray-200 py-6\">{{ title }}</h1>\n\n      <ul class=\"flex mb-0 list-none flex-wrap pb-4 flex-row\">\n        <li class=\" last:mr-0 flex-auto text-center\">\n          <a\n            class=\"text-xs font-bold uppercase px-5 py-3 block leading-normal\"\n            (click)=\"toggleTabs(1)\"\n            [ngClass]=\"{\n              'bg-gray-200': openTab !== 1,\n              'bg-white': openTab === 1\n            }\"\n          >\n            <i class=\"fas fa-space-shuttle text-base mr-1\"></i>\n            Chat\n          </a>\n        </li>\n        <li class=\"mr-2 last:mr-0 flex-auto text-center\">\n          <a\n            class=\"text-xs font-bold uppercase px-5 py-3 block leading-normal\"\n            (click)=\"toggleTabs(2)\"\n            [ngClass]=\"{\n              'bg-gray-200': openTab !== 2,\n              'bg-white': openTab === 2\n            }\"\n          >\n            <i class=\"fas fa-cog text-base mr-1\"></i>\n            Participants (\n            {{ participants?.length }})\n          </a>\n        </li>\n      </ul>\n      <div\n        class=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 \"\n      >\n        <div class=\"px-4 py-5 flex-auto\">\n          <div class=\"tab-content tab-space\">\n            <div [ngClass]=\"{ hidden: openTab !== 1, block: openTab === 1 }\">\n              <app-chat\n                [messages]=\"messages\"\n                (onSendMessage)=\"onSendMessage.emit($event)\"\n              >\n              </app-chat>\n            </div>\n            <div [ngClass]=\"{ hidden: openTab !== 2, block: openTab === 2 }\">\n              <app-participants\n                [participants]=\"participants\"\n              ></app-participants>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport default class PurePageShellComponent {\n  @Input() messages?: any\n  @Input() participants?: Participant[]\n  @Output() onSendMessage: EventEmitter<any> = new EventEmitter()\n\n  openTab = 1\n  toggleTabs($tabNumber: number) {\n    this.openTab = $tabNumber\n  }\n  title = 'Status Meeting Standup'\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-4da2751f6e4788d15c2cc91bb7952aedde41404753eddd5cbc2d39357f3d83c457801cfd7447c67307482ad81de71fb654fe724fdf9f231a9a3e5413ac86b73d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { RouterModule } from '@angular/router'\nimport { HttpClientModule } from '@angular/common/http'\n\nimport AppComponent from './app.component'\nimport ChatComponent from './components/chat/chat.component'\nimport ParticipantsComponent from './components/participants/participants.component'\nimport PageShellComponent from './components/shells/page-shell/page-shell.component'\nimport PurePageShellComponent from './components/shells/page-shell/pure-page-shell/pure-page-shell.component'\nimport MessageFormComponent from './components/message-form/message-form.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PurePageShellComponent,\n    PageShellComponent,\n    ChatComponent,\n    ParticipantsComponent,\n    MessageFormComponent,\n  ],\n  imports: [BrowserModule, RouterModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ChatComponent"
                        },
                        {
                            "name": "MessageFormComponent"
                        },
                        {
                            "name": "PageShellComponent"
                        },
                        {
                            "name": "ParticipantsComponent"
                        },
                        {
                            "name": "PurePageShellComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chat/chat.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onSendMessage: action('onSendMessage'),\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/message-form/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  sendMessage: action('sendMessage'),\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onSendMessage: action('onSendMessage'),\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultChat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chat/chat.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultMessageForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/message-form/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultParticipants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/participants/participants.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  wsEndpoint: 'ws://localhost:8080',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "participantsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/participants/participants.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Participant[]",
                "defaultValue": "[\n  {\n    firstname: 'Elon',\n    lastname: 'Musk',\n  },\n  {\n    firstname: 'Jeff',\n    lastname: 'Bezos',\n  },\n  {\n    firstname: 'JB',\n    lastname: 'Straubel',\n  },\n  {\n    firstname: 'Reid',\n    lastname: 'Hoffman',\n  },\n]"
            },
            {
                "name": "participantsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/participants/participants.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    firstname: 'Elon',\n    lastname: 'Musk',\n  },\n  {\n    firstname: 'Jeff',\n    lastname: 'Bezos',\n  },\n  {\n    firstname: 'JB',\n    lastname: 'Straubel',\n  },\n  {\n    firstname: 'Reid',\n    lastname: 'Hoffman',\n  },\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chat/chat.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ChatComponent>",
                "defaultValue": "(args: ChatComponent) => ({\n  props: {\n    ...args,\n    onSendMessage: actionsData.onSendMessage,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/participants/participants.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ParticipantsComponent>",
                "defaultValue": "(\n  args: ParticipantsComponent\n) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/message-form/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MessageFormComponent>",
                "defaultValue": "(args: MessageFormComponent) => ({\n  props: {\n    ...args,\n    sendMessage: actionsData.sendMessage,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PurePageShellComponent>",
                "defaultValue": "(\n  args: PurePageShellComponent\n) => ({\n  props: {\n    ...args,\n    onSendMessage: actionsData.onSendMessage,\n  },\n})"
            },
            {
                "name": "WS_ENDPOINT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/chat.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.wsEndpoint"
            },
            {
                "name": "WS_ENDPOINT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.wsEndpoint"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/chat/chat.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chat/chat.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onSendMessage: action('onSendMessage'),\n}"
                },
                {
                    "name": "DefaultChat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chat/chat.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chat/chat.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ChatComponent>",
                    "defaultValue": "(args: ChatComponent) => ({\n  props: {\n    ...args,\n    onSendMessage: actionsData.onSendMessage,\n  },\n})"
                }
            ],
            "src/app/components/message-form/message-form.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/message-form/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  sendMessage: action('sendMessage'),\n}"
                },
                {
                    "name": "DefaultMessageForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/message-form/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/message-form/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MessageFormComponent>",
                    "defaultValue": "(args: MessageFormComponent) => ({\n  props: {\n    ...args,\n    sendMessage: actionsData.sendMessage,\n  },\n})"
                }
            ],
            "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onSendMessage: action('onSendMessage'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PurePageShellComponent>",
                    "defaultValue": "(\n  args: PurePageShellComponent\n) => ({\n  props: {\n    ...args,\n    onSendMessage: actionsData.onSendMessage,\n  },\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/components/participants/participants.component.stories.ts": [
                {
                    "name": "DefaultParticipants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/participants/participants.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "participantsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/participants/participants.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Participant[]",
                    "defaultValue": "[\n  {\n    firstname: 'Elon',\n    lastname: 'Musk',\n  },\n  {\n    firstname: 'Jeff',\n    lastname: 'Bezos',\n  },\n  {\n    firstname: 'JB',\n    lastname: 'Straubel',\n  },\n  {\n    firstname: 'Reid',\n    lastname: 'Hoffman',\n  },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/participants/participants.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ParticipantsComponent>",
                    "defaultValue": "(\n  args: ParticipantsComponent\n) => ({\n  props: args,\n})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  wsEndpoint: 'ws://localhost:8080',\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/participants/participants.component.ts": [
                {
                    "name": "participantsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/participants/participants.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    firstname: 'Elon',\n    lastname: 'Musk',\n  },\n  {\n    firstname: 'Jeff',\n    lastname: 'Bezos',\n  },\n  {\n    firstname: 'JB',\n    lastname: 'Straubel',\n  },\n  {\n    firstname: 'Reid',\n    lastname: 'Hoffman',\n  },\n]"
                }
            ],
            "src/app/chat.service.ts": [
                {
                    "name": "WS_ENDPOINT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/chat.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.wsEndpoint"
                }
            ],
            "src/app/data.service.ts": [
                {
                    "name": "WS_ENDPOINT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.wsEndpoint"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/chat.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ChatService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/chat.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WS_ENDPOINT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat/chat.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat/chat.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultChat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat/chat.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat/chat.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChatComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat/chat.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Message",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/message-form/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/message-form/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultMessageForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/message-form/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/message-form/message-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MessageFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/participants/participants.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultParticipants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/participants/participants.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "participantsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/participants/participants.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/participants/participants.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ParticipantsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/participants/participants.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Participant",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/participants/participants.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "participantsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shells/page-shell/page-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PurePageShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DataService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/data.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Message",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/data.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WS_ENDPOINT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}