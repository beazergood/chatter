{
    "pipes": [],
    "interfaces": [
        {
            "name": "ChatState",
            "id": "interface-ChatState-4587b35b1d1f85bff8cf2d7e3d4040f08adae1fb763d8558a500ee83c32d8a1c080913f560e4162e3d13c2c1b18ba2da6375478bf734000bd509fd6663e7a753",
            "file": "src/app/chat.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { ComponentStore } from '@ngrx/component-store'\nimport { Observable, switchMap } from 'rxjs'\nimport { DataService } from './data.service'\nimport { Message } from './data.interfaces'\n\nexport interface ChatState {\n  messages: Message[]\n}\n\n@Injectable()\nexport class ChatStore extends ComponentStore<ChatState> {\n  constructor(private dataSvc: DataService) {\n    super({ messages: [] })\n  }\n\n  // Each new call of sendMessage(msg) pushes that msg into message$ stream.\n  // readonly sendMessage = this.effect((message$: Observable<string>) => {\n  // return message$.pipe(\n  //   // ðŸ‘‡ Handle race condition with the proper choice of the flattening operator.\n  //   switchMap((msg) => this.dataSvc.sendMessage(msg).pipe(\n  //     //ðŸ‘‡ Act on the result within inner pipe.\n  //     tap({\n  //       next: (msg) => this.addMsg(msg),\n  //       error: (e) => console.error(e),\n  //     }),\n  //     // ðŸ‘‡ Handle potential error within inner pipe.\n  //     catchError(() => EMPTY),\n  //   )),\n  // );\n  // })\n}\n",
            "properties": [
                {
                    "name": "messages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Message[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CurrentUser",
            "id": "interface-CurrentUser-fab148a1f8ca1d4bb8358fd30ce7bace036c45ae18c544a1e88b3be43d6c87de6a46e9e62032d13c063de8800946864280015abc3f4bff45ae2404bef4943aa3",
            "file": "src/app/data.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from '../environments/environment'\n\nexport const WS_ENDPOINT = environment.wsEndpoint\n\nexport interface Message {\n  _id: string\n  _userId: string\n  _created: Date\n  _modified?: Date\n  name: string\n  message: string\n}\n\nexport interface Participant {\n  _id: string\n  name: string\n}\n\nexport interface CurrentUser {\n  _id: string\n  name: string\n}\n",
            "properties": [
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Message",
            "id": "interface-Message-fab148a1f8ca1d4bb8358fd30ce7bace036c45ae18c544a1e88b3be43d6c87de6a46e9e62032d13c063de8800946864280015abc3f4bff45ae2404bef4943aa3",
            "file": "src/app/data.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from '../environments/environment'\n\nexport const WS_ENDPOINT = environment.wsEndpoint\n\nexport interface Message {\n  _id: string\n  _userId: string\n  _created: Date\n  _modified?: Date\n  name: string\n  message: string\n}\n\nexport interface Participant {\n  _id: string\n  name: string\n}\n\nexport interface CurrentUser {\n  _id: string\n  name: string\n}\n",
            "properties": [
                {
                    "name": "_created",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "_modified",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "_userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Participant",
            "id": "interface-Participant-fab148a1f8ca1d4bb8358fd30ce7bace036c45ae18c544a1e88b3be43d6c87de6a46e9e62032d13c063de8800946864280015abc3f4bff45ae2404bef4943aa3",
            "file": "src/app/data.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from '../environments/environment'\n\nexport const WS_ENDPOINT = environment.wsEndpoint\n\nexport interface Message {\n  _id: string\n  _userId: string\n  _created: Date\n  _modified?: Date\n  name: string\n  message: string\n}\n\nexport interface Participant {\n  _id: string\n  name: string\n}\n\nexport interface CurrentUser {\n  _id: string\n  name: string\n}\n",
            "properties": [
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ChatStore",
            "id": "injectable-ChatStore-4587b35b1d1f85bff8cf2d7e3d4040f08adae1fb763d8558a500ee83c32d8a1c080913f560e4162e3d13c2c1b18ba2da6375478bf734000bd509fd6663e7a753",
            "file": "src/app/chat.store.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { ComponentStore } from '@ngrx/component-store'\nimport { Observable, switchMap } from 'rxjs'\nimport { DataService } from './data.service'\nimport { Message } from './data.interfaces'\n\nexport interface ChatState {\n  messages: Message[]\n}\n\n@Injectable()\nexport class ChatStore extends ComponentStore<ChatState> {\n  constructor(private dataSvc: DataService) {\n    super({ messages: [] })\n  }\n\n  // Each new call of sendMessage(msg) pushes that msg into message$ stream.\n  // readonly sendMessage = this.effect((message$: Observable<string>) => {\n  // return message$.pipe(\n  //   // ðŸ‘‡ Handle race condition with the proper choice of the flattening operator.\n  //   switchMap((msg) => this.dataSvc.sendMessage(msg).pipe(\n  //     //ðŸ‘‡ Act on the result within inner pipe.\n  //     tap({\n  //       next: (msg) => this.addMsg(msg),\n  //       error: (e) => console.error(e),\n  //     }),\n  //     // ðŸ‘‡ Handle potential error within inner pipe.\n  //     catchError(() => EMPTY),\n  //   )),\n  // );\n  // })\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataSvc",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "dataSvc",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "ComponentStore",
            "type": "injectable"
        },
        {
            "name": "DataService",
            "id": "injectable-DataService-24d8d05e26bb7f8d5b01d34bfb15b820afd45c5eeb2cc2ba234c93a59da4d62497c284dfa0dc57bec837931c5c71d28509b53c54605897c4f5bee0b5198b360a",
            "file": "src/app/data.service.ts",
            "properties": [
                {
                    "name": "_currentUserId",
                    "defaultValue": "new BehaviorSubject(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_messages",
                    "defaultValue": "new BehaviorSubject([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_participants",
                    "defaultValue": "new BehaviorSubject([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_websocket",
                    "defaultValue": "webSocket(WS_ENDPOINT)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WebSocketSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentUserId$",
                    "defaultValue": "this._currentUserId.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "messages$",
                    "defaultValue": "this._messages.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "participants$",
                    "defaultValue": "this._participants.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "participantsList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Participant[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "serverMessages",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "buildParticipantsList",
                    "args": [
                        {
                            "name": "socketData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "socketData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createParticipant",
                    "args": [
                        {
                            "name": "socketData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "socketData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editMessage",
                    "args": [
                        {
                            "name": "msg",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "msg",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "processSocketData",
                    "args": [
                        {
                            "name": "socketData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "socketData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendMessage",
                    "args": [
                        {
                            "name": "msg",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "msg",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateMessagesFeed",
                    "args": [
                        {
                            "name": "socketData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "socketData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core'\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket'\nimport { tap } from 'rxjs/operators'\nimport { BehaviorSubject, Observable } from 'rxjs'\nimport { Participant, WS_ENDPOINT } from './data.interfaces'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  private _websocket: WebSocketSubject<any> = webSocket(WS_ENDPOINT)\n\n  private _messages: BehaviorSubject<any> = new BehaviorSubject([])\n  public messages$ = this._messages.asObservable()\n\n  private participantsList: Participant[] = []\n  private _participants: BehaviorSubject<any> = new BehaviorSubject([])\n  public participants$: Observable<any> = this._participants.asObservable()\n\n  public serverMessages: any[] = []\n\n  private _currentUserId: BehaviorSubject<any> = new BehaviorSubject(null)\n  public currentUserId$: Observable<string> = this._currentUserId.asObservable()\n\n  constructor() {\n    this._websocket\n      .pipe(\n        tap({\n          next: (data) => console.log('[Live observable] Next: ', data),\n          error: (error) => console.log('[Live observable] Error:', error),\n          complete: () => console.log('[Live observable] Connection Closed'),\n        })\n      )\n      .subscribe(\n        (data) => {\n          console.log(\n            'message from server being pushed to client array: ',\n            JSON.parse(JSON.stringify(data))\n          )\n\n          const socketData = JSON.parse(JSON.stringify(data))\n          this.processSocketData(socketData)\n        },\n        (err) => console.error(err),\n        () => console.warn('Completed!')\n      )\n  }\n\n  private processSocketData(socketData: any) {\n    this.buildParticipantsList(socketData)\n    this.updateMessagesFeed(socketData)\n  }\n\n  private createParticipant(socketData: any): void {\n    this._currentUserId.next(socketData._newUserId)\n  }\n\n  private updateMessagesFeed(socketData: any) {\n    // process any deletions/edits as well as add new messages to the chat feed\n    // TODO update the serverMessages array to reflect any edits\n    if (socketData._newMessage || socketData._newUserId) {\n      this.serverMessages.push(socketData)\n    } else if (socketData._editedMessage) {\n      const targetIx = this.serverMessages.findIndex(\n        (msg) => msg._id === socketData._id\n      )\n      console.log('targetIx: ', targetIx)\n      this.serverMessages[targetIx] = socketData\n    }\n  }\n\n  private buildParticipantsList(socketData: any) {\n    const userData = {\n      _id: socketData._userId,\n      name: socketData.name,\n    }\n    let updatedParticipantsList\n\n    if (socketData.newConnection) {\n      this.createParticipant(socketData)\n    }\n\n    console.log(\n      'existing participant, add if not already present in: ',\n      this.participantsList\n    )\n    var index = this.participantsList.findIndex((x) => x._id == userData._id)\n\n    index === -1 // not in list, add object to local array\n      ? (updatedParticipantsList = this.participantsList.concat([userData])) // this.participantsList with userData in it\n      : (updatedParticipantsList = this.participantsList) // just existing participantsList\n\n    console.log('ðŸ˜ŽðŸ˜Ž updatedParticipantsList: ', updatedParticipantsList)\n    this._participants.next(updatedParticipantsList)\n  }\n\n  sendMessage(msg: any) {\n    const serverPayload = {\n      ...msg,\n      _created: new Date(),\n      _userId: this._currentUserId.getValue(),\n      _editedMessage: false,\n      _newMessage: true,\n    }\n    console.log('sending message: ', serverPayload)\n    this._websocket.next(serverPayload)\n  }\n\n  editMessage(msg: any) {\n    const serverPayload = {\n      ...msg,\n      _modified: new Date(),\n      _editedMessage: true,\n      _newMessage: false,\n    }\n    console.log('editMessage: ', serverPayload)\n    this._websocket.next(serverPayload)\n  }\n\n  close() {\n    this._websocket.complete()\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-ded4ee8379e39c74ac30c9ab10dd1ad569bbdd3766cde8654f723149beffba31fc8dff10bb76c2c04efdb75301da14b6d222b5b0d2a420f6de74c216855c20a1",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<app-page-shell></app-page-shell>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'le-chat'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  template: ` <app-page-shell></app-page-shell> `,\n})\nexport default class AppComponent {\n  title = 'le-chat'\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ChatFeedComponent",
            "id": "component-ChatFeedComponent-f36de79873f480592781e9765a584c48e22deb7960ecd38dc251651124a0430b8d42bc3793bc99ed04aeb151d091f13aaaa229cd62d11ca47b968b5a012410bf",
            "file": "src/app/components/chat-feed/chat-feed.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chat-feed",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-col flex-1\">   <ng-template #noChat>No chat</ng-template>\n   <ng-container *ngIf=\"messages?.length; else noChat\">\n     <div\n       *ngFor=\"let msg of messages; trackBy: identify\"\n       class=\"py-2 border-b border-gray-100\"\n     >\n       <app-chat-item\n         [msg]=\"msg\"\n         [userId]=\"userId\"\n         (saveChanges)=\"saveChanges.emit($event)\"\n       ></app-chat-item>\n     </div>\n   </ng-container>\n </div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "messages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "Message[]",
                    "decorators": []
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "saveChanges",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "identify",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core'\nimport { Message } from '../../data.interfaces'\n\n/***\n * @description shows a feed of app-chat-items\n */\n@Component({\n  selector: 'app-chat-feed',\n  template: ` <div class=\"flex flex-col flex-1\">\n    <ng-template #noChat>No chat</ng-template>\n    <ng-container *ngIf=\"messages?.length; else noChat\">\n      <div\n        *ngFor=\"let msg of messages; trackBy: identify\"\n        class=\"py-2 border-b border-gray-100\"\n      >\n        <app-chat-item\n          [msg]=\"msg\"\n          [userId]=\"userId\"\n          (saveChanges)=\"saveChanges.emit($event)\"\n        ></app-chat-item>\n      </div>\n    </ng-container>\n  </div>`,\n})\nexport default class ChatFeedComponent {\n  @Input() messages?: Message[]\n  @Input() userId?: string\n  @Output() saveChanges: EventEmitter<any> = new EventEmitter()\n\n  identify(index: number, item: any) {\n    return item._id\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ChatItemComponent",
            "id": "component-ChatItemComponent-1fcece8d08797ed625fa0e86e7f901c11fa8807498281a0e7e5f9a51ceb252df559fa234d710a47d7f1fbf89074552148c0145a95dee00cd90fa17172c97f6fb",
            "file": "src/app/components/chat-item/chat-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chat-item",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-row\">\n  <div class=\"flex-1\">\n    <p>\n      <span class=\"font-semibold mr-2\">{{ msg.name }}</span>\n      <span class=\"text-gray-400\">{{ msg._created | date: 'HH:mm' }}</span>\n      <span class=\"pl-1 ml-1 text-xs text-gray-400\" *ngIf=\"msg._modified\"\n        >&nbsp; Edited</span\n      >\n    </p>\n    <p *ngIf=\"!editing\">{{ msg.message }}</p>\n    <ng-container *ngIf=\"editing\">\n      <form [formGroup]=\"msgForm\">\n        <fieldset>\n          <div class=\"mb-4\">\n            <input\n              class=\"shadow appearance-none rounded w-full py-2 px-3 border\n text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              id=\"name\"\n              data-testid=\"name\"\n              type=\"text\"\n              placeholder=\"Message\"\n              formControlName=\"message\"\n            />\n          </div>\n        </fieldset>\n        <button\n          class=\"p-2 bg-purple-400 rounded-md text-white\"\n          (click)=\"save()\"\n        >\n          Save changes\n        </button>\n      </form>\n    </ng-container>\n  </div>\n  <button\n    class=\"w-14 h-14 hover:bg-gray-100 rounded-full \"\n    *ngIf=\"msg._id && msg._userId === userId && !editing\"\n    (click)=\"editMessage()\"\n  >\n    <i class=\"fa fa-pencil\"></i>\n  </button>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "msg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "Message",
                    "decorators": []
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "saveChanges",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "editing",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "msgForm",
                    "defaultValue": "this.fb.group({\n    message: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methodsClass": [
                {
                    "name": "editMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { Message } from 'src/app/data.interfaces'\n\n@Component({\n  selector: 'app-chat-item',\n  template: `\n    <div class=\"flex flex-row\">\n      <div class=\"flex-1\">\n        <p>\n          <span class=\"font-semibold mr-2\">{{ msg.name }}</span>\n          <span class=\"text-gray-400\">{{ msg._created | date: 'HH:mm' }}</span>\n          <span class=\"pl-1 ml-1 text-xs text-gray-400\" *ngIf=\"msg._modified\"\n            >&nbsp; Edited</span\n          >\n        </p>\n        <p *ngIf=\"!editing\">{{ msg.message }}</p>\n        <ng-container *ngIf=\"editing\">\n          <form [formGroup]=\"msgForm\">\n            <fieldset>\n              <div class=\"mb-4\">\n                <input\n                  class=\"shadow appearance-none rounded w-full py-2 px-3 border\n     text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"name\"\n                  data-testid=\"name\"\n                  type=\"text\"\n                  placeholder=\"Message\"\n                  formControlName=\"message\"\n                />\n              </div>\n            </fieldset>\n            <button\n              class=\"p-2 bg-purple-400 rounded-md text-white\"\n              (click)=\"save()\"\n            >\n              Save changes\n            </button>\n          </form>\n        </ng-container>\n      </div>\n      <button\n        class=\"w-14 h-14 hover:bg-gray-100 rounded-full \"\n        *ngIf=\"msg._id && msg._userId === userId && !editing\"\n        (click)=\"editMessage()\"\n      >\n        <i class=\"fa fa-pencil\"></i>\n      </button>\n    </div>\n  `,\n})\nexport default class ChatItemComponent implements OnInit {\n  @Input() msg!: Message\n  @Input() userId?: string\n  @Output() saveChanges: EventEmitter<any> = new EventEmitter()\n\n  editing: boolean = false\n\n  msgForm: FormGroup = this.fb.group({\n    message: [''],\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.msgForm.controls.message.patchValue(this.msg.message)\n  }\n\n  editMessage() {\n    console.log('editMessage(): ')\n    this.editing = !this.editing\n  }\n\n  save() {\n    console.log('saveChanges ')\n    this.editing = false\n    const editPayload = {\n      ...this.msg,\n      message: this.msgForm.controls.message.value,\n    }\n    console.log('editPayload: ', editPayload)\n    this.saveChanges.emit(editPayload)\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-0cd94fbc94a83702e45bf987cb3b3f9074d69cd27e6ca2e4fbac0dc5b5047bd4dc3a9ce8a77f6bd9ab7ae3e6ca8e49b34bed529ca0da0fa428fec544a0324870",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "MessageFormComponent",
            "id": "component-MessageFormComponent-66b9b32ab44e3fff4fba2d0a30c9ff2efca909fca08039b653039f2d69b4231c52370e0304719afb8a75afa7c2b6b51051f0454cf5c64214a1c023836acdd3f8",
            "file": "src/app/components/message-form/message-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-message-form",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-row mt-10\">\n  <div class=\"bg-gray-200 shadow-md rounded px-8 pt-6 pb-8 mb-4 flex-1\">\n    <form [formGroup]=\"messageForm\" autocomplete=\"off\">\n      <fieldset\n        *ngIf=\"hideNameInput\"\n        class=\"mb-2\"\n        (click)=\"hideNameInput = !hideNameInput\"\n      >\n        <label>{{ messageForm.controls.name.value }}</label>\n      </fieldset>\n      <fieldset *ngIf=\"!hideNameInput\">\n        <div class=\"mb-4\">\n          <input\n            class=\"shadow appearance-none rounded w-full py-2 px-3 border\n         text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"name\"\n            data-testid=\"name\"\n            type=\"text\"\n            placeholder=\"Your name\"\n            formControlName=\"name\"\n          />\n        </div>\n      </fieldset>\n      <fieldset *ngIf=\"messageForm.controls.name.value\">\n        <div class=\"mb-4\">\n          <input\n            class=\"shadow appearance-none rounded w-full py-2 px-3 border\n         text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"message\"\n            data-testid=\"message\"\n            type=\"text\"\n            placeholder=\"Message\"\n            formControlName=\"message\"\n          />\n        </div>\n      </fieldset>\n    </form>\n    <div class=\"flex content-center\">\n      <span class=\"flex-1\"></span>\n      <button\n        class=\"p-2 w-full rounded-md  md:w-64 text-white\"\n        type=\"submit\"\n        data-testid=\"submit-button\"\n        [ngClass]=\"{ 'shadow-md bg-purple-400': messageForm.valid }\"\n        [disabled]=\"!messageForm.valid\"\n        (click)=\"submit()\"\n      >\n        Send\n      </button>\n      <span class=\"flex-1\"></span>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "sendMessage",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "hideNameInput",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "messageForm",
                    "defaultValue": "this.fb.group({\n    name: [this.name, Validators.required],\n    message: [this.message, Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 65
                }
            ],
            "methodsClass": [
                {
                    "name": "afterSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-message-form',\n  template: `\n    <div class=\"flex flex-row mt-10\">\n      <div class=\"bg-gray-200 shadow-md rounded px-8 pt-6 pb-8 mb-4 flex-1\">\n        <form [formGroup]=\"messageForm\" autocomplete=\"off\">\n          <fieldset\n            *ngIf=\"hideNameInput\"\n            class=\"mb-2\"\n            (click)=\"hideNameInput = !hideNameInput\"\n          >\n            <label>{{ messageForm.controls.name.value }}</label>\n          </fieldset>\n          <fieldset *ngIf=\"!hideNameInput\">\n            <div class=\"mb-4\">\n              <input\n                class=\"shadow appearance-none rounded w-full py-2 px-3 border\n             text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"name\"\n                data-testid=\"name\"\n                type=\"text\"\n                placeholder=\"Your name\"\n                formControlName=\"name\"\n              />\n            </div>\n          </fieldset>\n          <fieldset *ngIf=\"messageForm.controls.name.value\">\n            <div class=\"mb-4\">\n              <input\n                class=\"shadow appearance-none rounded w-full py-2 px-3 border\n             text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                id=\"message\"\n                data-testid=\"message\"\n                type=\"text\"\n                placeholder=\"Message\"\n                formControlName=\"message\"\n              />\n            </div>\n          </fieldset>\n        </form>\n        <div class=\"flex content-center\">\n          <span class=\"flex-1\"></span>\n          <button\n            class=\"p-2 w-full rounded-md  md:w-64 text-white\"\n            type=\"submit\"\n            data-testid=\"submit-button\"\n            [ngClass]=\"{ 'shadow-md bg-purple-400': messageForm.valid }\"\n            [disabled]=\"!messageForm.valid\"\n            (click)=\"submit()\"\n          >\n            Send\n          </button>\n          <span class=\"flex-1\"></span>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport default class MessageFormComponent {\n  @Output() sendMessage: EventEmitter<any> = new EventEmitter()\n\n  name: string = ''\n  message: string = ''\n  hideNameInput: boolean = false\n\n  constructor(private fb: FormBuilder) {}\n\n  messageForm: FormGroup = this.fb.group({\n    name: [this.name, Validators.required],\n    message: [this.message, Validators.required],\n  })\n\n  submit(): void {\n    console.log('submitting form : ', this.messageForm.value)\n    this.sendMessage.emit(this.messageForm.value)\n    this.afterSubmit()\n  }\n\n  private afterSubmit(): void {\n    this.hideNameInput = true // switches name input to a label\n    this.messageForm.controls.message.patchValue('') // resets the message input ready for next message\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 67,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-432c9ae0bcf6e2e1f46701f7565a67376cb10145b7d049c5fe930cf8f075c6e02e24151589750b18cbaa8266f7c61393b95c4d833fbfd71ee228904aa014349f",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageShellComponent",
            "id": "component-PageShellComponent-4a5d2e8ef496d1eb2f68fd2002dabf29a59fda92b0a1df149a820d24a5715ed267d26b46eaf4d8fad5cbf1c48e2efb5ff7437783509bc8ac4f239d53cb4ee3aa",
            "file": "src/app/components/shells/page-shell/page-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-shell",
            "styleUrls": [],
            "styles": [],
            "template": "<app-pure-page-shell\n  [messages]=\"messages$\"\n  [participants]=\"participants$ | async\"\n  [userId]=\"userId$ | async\"\n  (onSendMessage)=\"dataSvc.sendMessage($event)\"\n  (onEditMessage)=\"dataSvc.editMessage($event)\"\n>\n</app-pure-page-shell>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSvc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataService",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "messages$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "participants$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "userId$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core'\nimport { Observable, tap } from 'rxjs'\n// import { ChatStore } from 'src/app/chat.store'\nimport { DataService } from 'src/app/data.service'\nimport { Participant } from '../../../data.interfaces'\n\n@Component({\n  selector: 'app-page-shell',\n  template: `\n    <app-pure-page-shell\n      [messages]=\"messages$\"\n      [participants]=\"participants$ | async\"\n      [userId]=\"userId$ | async\"\n      (onSendMessage)=\"dataSvc.sendMessage($event)\"\n      (onEditMessage)=\"dataSvc.editMessage($event)\"\n    >\n    </app-pure-page-shell>\n  `,\n  // providers: [ChatStore],\n})\nexport default class PageShellComponent {\n  participants$?: Observable<any>\n  messages$: any[]\n  userId$: Observable<any>\n\n  constructor(public dataSvc: DataService) {\n    this.messages$ = this.dataSvc.serverMessages\n    this.userId$ = this.dataSvc.currentUserId$\n    this.participants$ = this.dataSvc.participants$\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataSvc",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "dataSvc",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ParticipantsComponent",
            "id": "component-ParticipantsComponent-9db107de54a3e8c741f59a7752fbec7bcac5a0e60e319988849d83242ca07a20e48af8d8267636dc2992c7f0847c3bafaaaa2b4e5ed2d227e2c84a4e25e9dcad",
            "file": "src/app/components/participants/participants.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-participants",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"p-2\">\n  <ng-container *ngIf=\"participants\">\n    <ul class=\"w-100\">\n      <li\n        *ngFor=\"let participant of participants\"\n        class=\"p-4 border-b border-gray-200\"\n      >\n        {{ participant.name }}\n        <span *ngIf=\"participant._id === userId\">ðŸ‘ˆ YOU</span>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "participants",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core'\n\n@Component({\n  selector: 'app-participants',\n  template: `\n    <div class=\"p-2\">\n      <ng-container *ngIf=\"participants\">\n        <ul class=\"w-100\">\n          <li\n            *ngFor=\"let participant of participants\"\n            class=\"p-4 border-b border-gray-200\"\n          >\n            {{ participant.name }}\n            <span *ngIf=\"participant._id === userId\">ðŸ‘ˆ YOU</span>\n          </li>\n        </ul>\n      </ng-container>\n    </div>\n  `,\n})\nexport default class ParticipantsComponent implements OnChanges {\n  @Input() userId?: string\n  @Input() participants?: any = []\n\n  ngOnChanges(changes: any) {\n    console.log('changes: ', changes)\n    if (changes.userId && !changes.userId.firstChange) {\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnChanges"
            ]
        },
        {
            "name": "PurePageShellComponent",
            "id": "component-PurePageShellComponent-8572eb9d2570fa429575b5282cfb7e2291d0a37e445e6a9a4561b8ff2b9ea1a90b308b6d3345697dd84f891a558e6f31b30462c317ddf7bfe2859dddcac8022d",
            "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pure-page-shell",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"w-full flex flex-col h-screen\">\n  <h1 class=\"text-center bg-gray-200 py-6\">{{ title }}</h1>\n\n  <ul class=\"flex mb-0 list-none flex-wrap pb-4 flex-row\">\n    <li class=\" last:mr-0 flex-auto text-center\">\n      <a\n        class=\"text-xs font-bold uppercase px-5 py-3 block leading-normal\"\n        (click)=\"toggleTabs(1)\"\n        [ngClass]=\"{\n          'bg-gray-200': openTab !== 1,\n          'bg-white': openTab === 1\n        }\"\n      >\n        Chat\n      </a>\n    </li>\n    <li class=\"mr-2 last:mr-0 flex-auto text-center\">\n      <a\n        class=\"text-xs font-bold uppercase px-5 py-3 block leading-normal\"\n        (click)=\"toggleTabs(2)\"\n        [ngClass]=\"{\n          'bg-gray-200': openTab !== 2,\n          'bg-white': openTab === 2\n        }\"\n      >\n        Participants (\n        {{ participants?.length }})\n      </a>\n    </li>\n  </ul>\n\n  <div class=\"relative flex flex-col min-w-0 break-words flex-1 w-full p-4\">\n    <div class=\"flex flex-col flex-1 p-1\">\n      <div\n        [ngClass]=\"{\n          hidden: openTab !== 1,\n          block: openTab === 1\n        }\"\n        class=\"flex flex-col flex-1\"\n      >\n        <!-- CHAT TAB -->\n        <app-chat-feed\n          [messages]=\"messages\"\n          [userId]=\"userId\"\n          (saveChanges)=\"onEditMessage.emit($event)\"\n        >\n        </app-chat-feed>\n        <div class=\"flex-1\"></div>\n        <app-message-form\n          (sendMessage)=\"onSendMessage.emit($event)\"\n        ></app-message-form>\n      </div>\n\n      <div [ngClass]=\"{ hidden: openTab !== 2, block: openTab === 2 }\">\n        <!-- PARTICIPANTS TAB -->\n        <app-participants\n          [participants]=\"participants\"\n          [userId]=\"userId\"\n        ></app-participants>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "messages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "participants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "Participant[]",
                    "decorators": []
                },
                {
                    "name": "participantsCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onEditMessage",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "onSendMessage",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "openTab",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "title",
                    "defaultValue": "'Status Meeting Standup'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 85
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleTabs",
                    "args": [
                        {
                            "name": "$tabNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$tabNumber",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core'\nimport { Participant } from '../../../../data.interfaces'\n\n@Component({\n  selector: 'app-pure-page-shell',\n  template: `\n    <div class=\"w-full flex flex-col h-screen\">\n      <h1 class=\"text-center bg-gray-200 py-6\">{{ title }}</h1>\n\n      <ul class=\"flex mb-0 list-none flex-wrap pb-4 flex-row\">\n        <li class=\" last:mr-0 flex-auto text-center\">\n          <a\n            class=\"text-xs font-bold uppercase px-5 py-3 block leading-normal\"\n            (click)=\"toggleTabs(1)\"\n            [ngClass]=\"{\n              'bg-gray-200': openTab !== 1,\n              'bg-white': openTab === 1\n            }\"\n          >\n            Chat\n          </a>\n        </li>\n        <li class=\"mr-2 last:mr-0 flex-auto text-center\">\n          <a\n            class=\"text-xs font-bold uppercase px-5 py-3 block leading-normal\"\n            (click)=\"toggleTabs(2)\"\n            [ngClass]=\"{\n              'bg-gray-200': openTab !== 2,\n              'bg-white': openTab === 2\n            }\"\n          >\n            Participants (\n            {{ participants?.length }})\n          </a>\n        </li>\n      </ul>\n\n      <div class=\"relative flex flex-col min-w-0 break-words flex-1 w-full p-4\">\n        <div class=\"flex flex-col flex-1 p-1\">\n          <div\n            [ngClass]=\"{\n              hidden: openTab !== 1,\n              block: openTab === 1\n            }\"\n            class=\"flex flex-col flex-1\"\n          >\n            <!-- CHAT TAB -->\n            <app-chat-feed\n              [messages]=\"messages\"\n              [userId]=\"userId\"\n              (saveChanges)=\"onEditMessage.emit($event)\"\n            >\n            </app-chat-feed>\n            <div class=\"flex-1\"></div>\n            <app-message-form\n              (sendMessage)=\"onSendMessage.emit($event)\"\n            ></app-message-form>\n          </div>\n\n          <div [ngClass]=\"{ hidden: openTab !== 2, block: openTab === 2 }\">\n            <!-- PARTICIPANTS TAB -->\n            <app-participants\n              [participants]=\"participants\"\n              [userId]=\"userId\"\n            ></app-participants>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport default class PurePageShellComponent {\n  @Input() messages?: any\n  @Input() participants?: Participant[]\n  @Input() participantsCount: any = 0\n  @Input() userId?: string\n\n  @Output() onSendMessage: EventEmitter<any> = new EventEmitter()\n  @Output() onEditMessage: EventEmitter<any> = new EventEmitter()\n\n  openTab = 1\n  toggleTabs($tabNumber: number) {\n    this.openTab = $tabNumber\n  }\n  title = 'Status Meeting Standup'\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-cc79c3fb91f27653e6b81b7ffcc5a6cfd40a5860fe45c890985625aa54cf6727786e606c763a2dc23a388056aa4798e55436728185edf09b8d5a432857693879",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { RouterModule } from '@angular/router'\nimport { HttpClientModule } from '@angular/common/http'\nimport { ReactiveFormsModule } from '@angular/forms'\n\nimport AppComponent from './app.component'\nimport ChatFeedComponent from './components/chat-feed/chat-feed.component'\nimport ChatItemComponent from './components/chat-item/chat-item.component'\nimport ParticipantsComponent from './components/participants/participants.component'\nimport PageShellComponent from './components/shells/page-shell/page-shell.component'\nimport PurePageShellComponent from './components/shells/page-shell/pure-page-shell/pure-page-shell.component'\nimport MessageFormComponent from './components/message-form/message-form.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PurePageShellComponent,\n    PageShellComponent,\n    ChatFeedComponent,\n    ChatItemComponent,\n    ParticipantsComponent,\n    MessageFormComponent,\n  ],\n  imports: [BrowserModule, RouterModule, HttpClientModule, ReactiveFormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ChatFeedComponent"
                        },
                        {
                            "name": "ChatItemComponent"
                        },
                        {
                            "name": "MessageFormComponent"
                        },
                        {
                            "name": "PageShellComponent"
                        },
                        {
                            "name": "ParticipantsComponent"
                        },
                        {
                            "name": "PurePageShellComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/message-form/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  sendMessage: action('sendMessage'),\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chat-feed/chat-feed.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  saveChanges: action('saveChanges'),\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chat-item/chat-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onSendMessage: action('onSendMessage'),\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onSendMessage: action('onSendMessage'),\n}"
            },
            {
                "name": "CompletedMessageForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/message-form/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultChatFeed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chat-feed/chat-feed.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultChatItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chat-item/chat-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultParticipants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/participants/participants.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EditedChatItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chat-item/chat-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EmptyMessageForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/message-form/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  wsEndpoint: 'ws://localhost:8080',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  wsEndpoint: 'ws://localhost:8080',\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "participantsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/participants/participants.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Participant[]",
                "defaultValue": "[\n  {\n    _id: '12',\n    name: 'Elon Musk',\n  },\n  {\n    _id: '34',\n    name: 'Jeff Bezos',\n  },\n  {\n    _id: '56',\n    name: 'JB Straubel',\n  },\n  {\n    _id: '78',\n    name: 'Reid Hoffman',\n  },\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/message-form/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MessageFormComponent>",
                "defaultValue": "(args: MessageFormComponent) => ({\n  props: {\n    ...args,\n    sendMessage: actionsData.sendMessage,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chat-feed/chat-feed.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ChatFeedComponent>",
                "defaultValue": "(args: ChatFeedComponent) => ({\n  props: {\n    ...args,\n    saveChanges: actionsData.saveChanges,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/participants/participants.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ParticipantsComponent>",
                "defaultValue": "(\n  args: ParticipantsComponent\n) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chat-item/chat-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ChatItemComponent>",
                "defaultValue": "(args: ChatItemComponent) => ({\n  props: {\n    ...args,\n    onSendMessage: actionsData.onSendMessage,\n  },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PurePageShellComponent>",
                "defaultValue": "(\n  args: PurePageShellComponent\n) => ({\n  props: {\n    ...args,\n    onSendMessage: actionsData.onSendMessage,\n  },\n})"
            },
            {
                "name": "ValidMessageForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/message-form/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WS_ENDPOINT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data.interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.wsEndpoint"
            },
            {
                "name": "YourChatItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/chat-item/chat-item.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/message-form/message-form.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/message-form/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  sendMessage: action('sendMessage'),\n}"
                },
                {
                    "name": "CompletedMessageForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/message-form/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "EmptyMessageForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/message-form/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/message-form/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MessageFormComponent>",
                    "defaultValue": "(args: MessageFormComponent) => ({\n  props: {\n    ...args,\n    sendMessage: actionsData.sendMessage,\n  },\n})"
                },
                {
                    "name": "ValidMessageForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/message-form/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/chat-feed/chat-feed.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chat-feed/chat-feed.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  saveChanges: action('saveChanges'),\n}"
                },
                {
                    "name": "DefaultChatFeed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chat-feed/chat-feed.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chat-feed/chat-feed.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ChatFeedComponent>",
                    "defaultValue": "(args: ChatFeedComponent) => ({\n  props: {\n    ...args,\n    saveChanges: actionsData.saveChanges,\n  },\n})"
                }
            ],
            "src/app/components/chat-item/chat-item.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chat-item/chat-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onSendMessage: action('onSendMessage'),\n}"
                },
                {
                    "name": "DefaultChatItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chat-item/chat-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "EditedChatItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chat-item/chat-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chat-item/chat-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ChatItemComponent>",
                    "defaultValue": "(args: ChatItemComponent) => ({\n  props: {\n    ...args,\n    onSendMessage: actionsData.onSendMessage,\n  },\n})"
                },
                {
                    "name": "YourChatItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/chat-item/chat-item.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onSendMessage: action('onSendMessage'),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PurePageShellComponent>",
                    "defaultValue": "(\n  args: PurePageShellComponent\n) => ({\n  props: {\n    ...args,\n    onSendMessage: actionsData.onSendMessage,\n  },\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/components/participants/participants.component.stories.ts": [
                {
                    "name": "DefaultParticipants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/participants/participants.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "participantsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/participants/participants.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Participant[]",
                    "defaultValue": "[\n  {\n    _id: '12',\n    name: 'Elon Musk',\n  },\n  {\n    _id: '34',\n    name: 'Jeff Bezos',\n  },\n  {\n    _id: '56',\n    name: 'JB Straubel',\n  },\n  {\n    _id: '78',\n    name: 'Reid Hoffman',\n  },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/participants/participants.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ParticipantsComponent>",
                    "defaultValue": "(\n  args: ParticipantsComponent\n) => ({\n  props: args,\n})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  wsEndpoint: 'ws://localhost:8080',\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  wsEndpoint: 'ws://localhost:8080',\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/data.interfaces.ts": [
                {
                    "name": "WS_ENDPOINT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data.interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.wsEndpoint"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/chat.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ChatStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/chat.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ChatState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat-feed/chat-feed.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat-feed/chat-feed.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultChatFeed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat-feed/chat-feed.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat-feed/chat-feed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChatFeedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat-item/chat-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat-item/chat-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultChatItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat-item/chat-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EditedChatItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat-item/chat-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat-item/chat-item.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "YourChatItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/chat-item/chat-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChatItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/message-form/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/message-form/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CompletedMessageForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/message-form/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmptyMessageForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/message-form/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/message-form/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ValidMessageForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/message-form/message-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MessageFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/participants/participants.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultParticipants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/participants/participants.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "participantsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/participants/participants.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/participants/participants.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ParticipantsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shells/page-shell/page-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shells/page-shell/pure-page-shell/pure-page-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PurePageShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/data.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CurrentUser",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Message",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/data.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Participant",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data.interfaces.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WS_ENDPOINT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DataService",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}